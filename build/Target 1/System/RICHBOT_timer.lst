C51 COMPILER V9.60.7.0   RICHBOT_TIMER                                                     12/19/2023 11:49:39 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE RICHBOT_TIMER
OBJECT MODULE PLACED IN .\build\Target 1\System\RICHBOT_timer.o
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.exe .\SYSTEM\RICHBOT_TIMER.C OMF2 TABS(4) CODE NOCOND SYMBOLS PRINT(.\build\
                    -Target 1\System\RICHBOT_timer.lst) INCDIR(../../../../../../../Keil_v5/C51/INC/Atmel;User;System;../../../../../../../Ke
                    -il_v5/C51/INC) DEFINE(__UVISION_VERSION=526) OPTIMIZE(8,SPEED) LARGE ROM(LARGE) OBJECT(.\build\Target 1\System\RICHBOT_t
                    -imer.o)

line level    source

   1          #include "global.h"
   2          
   3          /*System ticks*/
   4          static volatile unsigned long idata g_sys_ticks;
   5          static unsigned int code g_timer0_init_val = 65536UL - (CFG_SYSFREQ/12/1000);
   6          /*Timer 0 as system tick timer. 1KHZ */
   7          void SysTick_Init(void) {
   8   1          TIM_InitTypeDef     TIM_InitStructure;                  //½á¹¹¶¨Òå
   9   1          TIM_InitStructure.TIM_Mode      = TIM_16Bit;            //Ö¸¶¨¹¤×÷Ä£Ê½,   TIM_16BitAutoReload,TIM_16Bit,TIM_8BitAu
             -toReload,TIM_16BitAutoReloadNoMask
  10   1          TIM_InitStructure.TIM_Polity    = PolityHigh;           //Ö¸¶¨ÖÐ¶ÏÓÅÏÈ¼¶, PolityHigh,PolityLow
  11   1          TIM_InitStructure.TIM_Interrupt = ENABLE;               //ÖÐ¶ÏÊÇ·ñÔÊÐí,   ENABLE»òDISABLE
  12   1          TIM_InitStructure.TIM_ClkSource = TIM_CLOCK_12T;            //Ö¸¶¨Ê±ÖÓÔ´,     TIM_CLOCK_1T,TIM_CLOCK_12T,TIM_CLOCK
             -_Ext
  13   1          TIM_InitStructure.TIM_ClkOut    = DISABLE;              //ÊÇ·ñÊä³ö¸ßËÙÂö³å, ENABLE»òDISABLE
  14   1          TIM_InitStructure.TIM_Value     = g_timer0_init_val;    //³õÖµ,
  15   1          TIM_InitStructure.TIM_Run       = ENABLE;               //ÊÇ·ñ³õÊ¼»¯ºóÆô¶¯¶¨Ê±Æ÷, ENABLE»òDISABLE
  16   1          Timer_Inilize(Timer0,&TIM_InitStructure);               //³õÊ¼»¯Timer0    Timer0,Timer1,Timer2
  17   1      }
  18          
  19          void timer0_ISR(void) interrupt 1
  20          {
  21   1          TL0 = g_timer0_init_val & 0xff;
  22   1          TH0 = g_timer0_init_val >> 8; 
  23   1          g_sys_ticks ++;
  24   1      }
  25          
  26          uint32_t time_GetTicks(void)
  27          {
  28   1          unsigned long ticks;
  29   1          EA = 0;
  30   1          ticks = g_sys_ticks;
  31   1          EA = 1;
  32   1          return ticks;
  33   1      }
  34          
  35          #if (CFG_SYSFREQ == 22118400 && INS_VER == INS_VER_Y5)
  36          static void Delay1us()
  37          {
  38   1          unsigned char i;
  39   1      
  40   1          i = 3;
  41   1          while (--i);
  42   1      }
  43          static void Delay10us()
  44          {
  45   1          unsigned char i;
  46   1      
  47   1          _nop_();
  48   1          _nop_();
  49   1          _nop_();
  50   1          i = 52;
C51 COMPILER V9.60.7.0   RICHBOT_TIMER                                                     12/19/2023 11:49:39 PAGE 2   

  51   1          while (--i);
  52   1      }
  53          static void Delay100us()
  54          {
  55   1          unsigned char i, j;
  56   1      
  57   1          i = 3;
  58   1          j = 26;
  59   1          do
  60   1          {
  61   2              while (--j);
  62   2          } while (--i);
  63   1      }
  64          #endif
  65          
  66          void DelayUs(uint16_t us)
  67          {
  68   1          for(;us>=100;us-=100) Delay100us();
  69   1          for(;us>=10;us-=10) Delay10us();
  70   1          for(;us>0;us--) Delay1us();
  71   1      }
  72          
  73          void DelayMs(uint16_t ms) {
  74   1          uint32_t oldticks;
  75   1          uint32_t ticks;
  76   1          oldticks  = time_GetTicks();
  77   1          do {
  78   2          ticks = time_GetTicks();
  79   2        } while (ticks - oldticks < ms);
  80   1      }
  81          
  82          
  83          #if(CPU_TYPE == CPU_TYPE_STC89)
 226          
 227          int Timer_Inilize(uint8_t TIM, TIM_InitTypeDef *TIMx)
 228          {
 229   1          if(TIM > Timer2)    return 1;   //¿Õ²Ù×÷
 230   1      
 231   1          if(TIM == Timer0)
 232   1          {
 233   2              TR0 = 0;        //Í£Ö¹¼ÆÊý
 234   2              if(TIMx->TIM_Interrupt == ENABLE)       ET0 = 1;    //ÔÊÐíÖÐ¶Ï
 235   2              else                                    ET0 = 0;    //½ûÖ¹ÖÐ¶Ï
 236   2              if(TIMx->TIM_Polity == PolityHigh)      PT0 = 1;    //¸ßÓÅÏÈ¼¶ÖÐ¶Ï
 237   2              else                                    PT0 = 0;    //µÍÓÅÏÈ¼¶ÖÐ¶Ï
 238   2              if(TIMx->TIM_Mode >  TIM_16BitAutoReloadNoMask) return 2;   //´íÎó
 239   2              TMOD = (TMOD & ~0x03) | TIMx->TIM_Mode; //¹¤×÷Ä£Ê½,0: 16Î»×Ô¶¯ÖØ×°, 1: 16Î»¶¨Ê±/¼ÆÊý, 2: 8Î»×Ô¶¯ÖØ×°, 3:
             - 16Î»×Ô¶¯ÖØ×°, ²»¿ÉÆÁ±ÎÖÐ¶Ï
 240   2              if(TIMx->TIM_ClkSource == TIM_CLOCK_12T)    AUXR &= ~0x80;  //12T
 241   2              if(TIMx->TIM_ClkSource == TIM_CLOCK_1T)     AUXR |=  0x80;  //1T
 242   2              if(TIMx->TIM_ClkSource == TIM_CLOCK_Ext)    TMOD |=  0x04;  //¶ÔÍâ¼ÆÊý»ò·ÖÆµ
 243   2              else                                        TMOD &= ~0x04;  //¶¨Ê±
 244   2              if(TIMx->TIM_ClkOut == ENABLE)  INT_CLKO |=  0x01;  //Êä³öÊ±ÖÓ
 245   2              else                            INT_CLKO &= ~0x01;  //²»Êä³öÊ±ÖÓ
 246   2              
 247   2              TH0 = (uint8_t)(TIMx->TIM_Value >> 8);
 248   2              TL0 = (uint8_t)TIMx->TIM_Value;
 249   2              if(TIMx->TIM_Run == ENABLE) TR0 = 1;    //¿ªÊ¼ÔËÐÐ
 250   2              return  0;      //³É¹¦
 251   2          }
 252   1      
 253   1          if(TIM == Timer1)
C51 COMPILER V9.60.7.0   RICHBOT_TIMER                                                     12/19/2023 11:49:39 PAGE 3   

 254   1          {
 255   2              TR1 = 0;        //Í£Ö¹¼ÆÊý
 256   2              if(TIMx->TIM_Interrupt == ENABLE)       ET1 = 1;    //ÔÊÐíÖÐ¶Ï
 257   2              else                                    ET1 = 0;    //½ûÖ¹ÖÐ¶Ï
 258   2              if(TIMx->TIM_Polity == PolityHigh)      PT1 = 1;    //¸ßÓÅÏÈ¼¶ÖÐ¶Ï
 259   2              else                                    PT1 = 0;    //µÍÓÅÏÈ¼¶ÖÐ¶Ï
 260   2              if(TIMx->TIM_Mode >= TIM_16BitAutoReloadNoMask) return 2;   //´íÎó
 261   2              TMOD = (TMOD & ~0x30) | (TIMx->TIM_Mode << 4);  //¹¤×÷Ä£Ê½,0: 16Î»×Ô¶¯ÖØ×°, 1: 16Î»¶¨Ê±/¼ÆÊý, 2: 8Î»×Ô¶¯Ö
             -Ø×°
 262   2              if(TIMx->TIM_ClkSource == TIM_CLOCK_12T)    AUXR &= ~0x40;  //12T
 263   2              if(TIMx->TIM_ClkSource == TIM_CLOCK_1T)     AUXR |=  0x40;  //1T
 264   2              if(TIMx->TIM_ClkSource == TIM_CLOCK_Ext)    TMOD |=  0x40;  //¶ÔÍâ¼ÆÊý»ò·ÖÆµ
 265   2              else                                        TMOD &= ~0x40;  //¶¨Ê±
 266   2              if(TIMx->TIM_ClkOut == ENABLE)  INT_CLKO |=  0x02;  //Êä³öÊ±ÖÓ
 267   2              else                            INT_CLKO &= ~0x02;  //²»Êä³öÊ±ÖÓ
 268   2              
 269   2              TH1 = (uint8_t)(TIMx->TIM_Value >> 8);
 270   2              TL1 = (uint8_t)TIMx->TIM_Value;
 271   2              if(TIMx->TIM_Run == ENABLE) TR1 = 1;    //¿ªÊ¼ÔËÐÐ
 272   2              return  0;      //³É¹¦
 273   2          }
 274   1      
 275   1          if(TIM == Timer2)       
 276   1          {
 277   2              AUXR &= ~(1<<4);    //Í£Ö¹¼ÆÊý
 278   2              if(TIMx->TIM_Interrupt == ENABLE)           IE2  |=  (1<<2);    //ÔÊÐíÖÐ¶Ï
 279   2              else                                        IE2  &= ~(1<<2);    //½ûÖ¹ÖÐ¶Ï
 280   2              if(TIMx->TIM_ClkSource >  TIM_CLOCK_Ext)    return 2;
 281   2              if(TIMx->TIM_ClkSource == TIM_CLOCK_12T)    AUXR &= ~(1<<2);    //12T
 282   2              if(TIMx->TIM_ClkSource == TIM_CLOCK_1T)     AUXR |=  (1<<2);    //1T
 283   2              if(TIMx->TIM_ClkSource == TIM_CLOCK_Ext)    AUXR |=  (1<<3);    //¶ÔÍâ¼ÆÊý»ò·ÖÆµ
 284   2              else                                        AUXR &= ~(1<<3);    //¶¨Ê±
 285   2              if(TIMx->TIM_ClkOut == ENABLE)  INT_CLKO |=  0x04;  //Êä³öÊ±ÖÓ
 286   2              else                            INT_CLKO &= ~0x04;  //²»Êä³öÊ±ÖÓ
 287   2      
 288   2              T2H = (uint8_t)(TIMx->TIM_Value >> 8);
 289   2              T2L = (uint8_t)TIMx->TIM_Value;
 290   2              if(TIMx->TIM_Run == ENABLE) AUXR |=  (1<<4);    //¿ªÊ¼ÔËÐÐ
 291   2              return  0;      //³É¹¦
 292   2          }
 293   1          return 2;   //´íÎó
 294   1      }
 295          #endif
 296          
 297          
C51 COMPILER V9.60.7.0   RICHBOT_TIMER                                                     12/19/2023 11:49:39 PAGE 4   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION SysTick_Init (BEGIN)
                                           ; SOURCE LINE # 7
                                           ; SOURCE LINE # 9
0000 900000      R     MOV     DPTR,#TIM_InitStructure
0003 7401              MOV     A,#01H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 10
0006 A3                INC     DPTR
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 11
0008 A3                INC     DPTR
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 12
000A A3                INC     DPTR
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 13
000C E4                CLR     A
000D A3                INC     DPTR
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 14
000F 900000      R     MOV     DPTR,#g_timer0_init_val
0012 93                MOVC    A,@A+DPTR
0013 FF                MOV     R7,A
0014 7401              MOV     A,#01H
0016 93                MOVC    A,@A+DPTR
0017 900000      R     MOV     DPTR,#TIM_InitStructure+05H
001A CF                XCH     A,R7
001B F0                MOVX    @DPTR,A
001C A3                INC     DPTR
001D EF                MOV     A,R7
001E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 15
001F A3                INC     DPTR
0020 7401              MOV     A,#01H
0022 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 16
0023 FB                MOV     R3,A
0024 7A00        R     MOV     R2,#HIGH TIM_InitStructure
0026 7900        R     MOV     R1,#LOW TIM_InitStructure
0028 E4                CLR     A
0029 FF                MOV     R7,A
002A 020000      R     LJMP    _Timer_Inilize
             ; FUNCTION SysTick_Init (END)

             ; FUNCTION timer0_ISR (BEGIN)
0000 C0E0              PUSH    ACC
0002 C0F0              PUSH    B
0004 C083              PUSH    DPH
0006 C082              PUSH    DPL
0008 C0D0              PUSH    PSW
000A 75D000            MOV     PSW,#00H
000D C000              PUSH    AR0
000F C004              PUSH    AR4
0011 C005              PUSH    AR5
0013 C006              PUSH    AR6
0015 C007              PUSH    AR7
                                           ; SOURCE LINE # 19
                                           ; SOURCE LINE # 21
0017 900000      R     MOV     DPTR,#g_timer0_init_val
C51 COMPILER V9.60.7.0   RICHBOT_TIMER                                                     12/19/2023 11:49:39 PAGE 5   

001A E4                CLR     A
001B 93                MOVC    A,@A+DPTR
001C FE                MOV     R6,A
001D 7401              MOV     A,#01H
001F 93                MOVC    A,@A+DPTR
0020 F58A              MOV     TL0,A
                                           ; SOURCE LINE # 22
0022 EE                MOV     A,R6
0023 F58C              MOV     TH0,A
                                           ; SOURCE LINE # 23
0025 7800        R     MOV     R0,#LOW g_sys_ticks
0027 120000      E     LCALL   ?C?LLDIDATA
002A EF                MOV     A,R7
002B 2401              ADD     A,#01H
002D FF                MOV     R7,A
002E E4                CLR     A
002F 3E                ADDC    A,R6
0030 FE                MOV     R6,A
0031 E4                CLR     A
0032 3D                ADDC    A,R5
0033 FD                MOV     R5,A
0034 E4                CLR     A
0035 3C                ADDC    A,R4
0036 FC                MOV     R4,A
0037 7800        R     MOV     R0,#LOW g_sys_ticks
0039 120000      E     LCALL   ?C?LSTIDATA
                                           ; SOURCE LINE # 24
003C D007              POP     AR7
003E D006              POP     AR6
0040 D005              POP     AR5
0042 D004              POP     AR4
0044 D000              POP     AR0
0046 D0D0              POP     PSW
0048 D082              POP     DPL
004A D083              POP     DPH
004C D0F0              POP     B
004E D0E0              POP     ACC
0050 32                RETI    
             ; FUNCTION timer0_ISR (END)

             ; FUNCTION time_GetTicks (BEGIN)
                                           ; SOURCE LINE # 26
                                           ; SOURCE LINE # 27
                                           ; SOURCE LINE # 29
0000 C2AF              CLR     EA
                                           ; SOURCE LINE # 30
0002 7800        R     MOV     R0,#LOW g_sys_ticks
0004 120000      E     LCALL   ?C?LLDIDATA
;---- Variable 'ticks' assigned to Register 'R4/R5/R6/R7' ----
                                           ; SOURCE LINE # 31
0007 D2AF              SETB    EA
                                           ; SOURCE LINE # 32
                                           ; SOURCE LINE # 33
0009 22                RET     
             ; FUNCTION time_GetTicks (END)

             ; FUNCTION Delay1us (BEGIN)
                                           ; SOURCE LINE # 36
                                           ; SOURCE LINE # 37
                                           ; SOURCE LINE # 40
;---- Variable 'i' assigned to Register 'R7' ----
0000 7F03              MOV     R7,#03H
C51 COMPILER V9.60.7.0   RICHBOT_TIMER                                                     12/19/2023 11:49:39 PAGE 6   

0002         ?C0004:
                                           ; SOURCE LINE # 41
0002 DFFE              DJNZ    R7,?C0004
                                           ; SOURCE LINE # 42
0004 22                RET     
             ; FUNCTION Delay1us (END)

             ; FUNCTION Delay10us (BEGIN)
                                           ; SOURCE LINE # 43
                                           ; SOURCE LINE # 44
                                           ; SOURCE LINE # 47
0000 00                NOP     
                                           ; SOURCE LINE # 48
0001 00                NOP     
                                           ; SOURCE LINE # 49
0002 00                NOP     
                                           ; SOURCE LINE # 50
;---- Variable 'i' assigned to Register 'R7' ----
0003 7F34              MOV     R7,#034H
0005         ?C0007:
                                           ; SOURCE LINE # 51
0005 DFFE              DJNZ    R7,?C0007
                                           ; SOURCE LINE # 52
0007 22                RET     
             ; FUNCTION Delay10us (END)

             ; FUNCTION Delay100us (BEGIN)
                                           ; SOURCE LINE # 53
                                           ; SOURCE LINE # 54
                                           ; SOURCE LINE # 57
;---- Variable 'i' assigned to Register 'R7' ----
0000 7F03              MOV     R7,#03H
                                           ; SOURCE LINE # 58
;---- Variable 'j' assigned to Register 'R6' ----
0002 7E1A              MOV     R6,#01AH
                                           ; SOURCE LINE # 60
0004         ?C0013:
                                           ; SOURCE LINE # 61
0004 DEFE              DJNZ    R6,?C0013
                                           ; SOURCE LINE # 62
0006 DFFC              DJNZ    R7,?C0013
                                           ; SOURCE LINE # 63
0008 22                RET     
             ; FUNCTION Delay100us (END)

             ; FUNCTION _DelayUs (BEGIN)
                                           ; SOURCE LINE # 66
;---- Variable 'us' assigned to Register 'R4/R5' ----
0000 AD07              MOV     R5,AR7
0002 AC06              MOV     R4,AR6
                                           ; SOURCE LINE # 67
                                           ; SOURCE LINE # 68
0004         ?C0016:
0004 C3                CLR     C
0005 ED                MOV     A,R5
0006 9464              SUBB    A,#064H
0008 EC                MOV     A,R4
0009 9400              SUBB    A,#00H
000B 400D              JC      ?C0019
000D 120000      R     LCALL   Delay100us
0010 749C              MOV     A,#09CH
0012 2D                ADD     A,R5
C51 COMPILER V9.60.7.0   RICHBOT_TIMER                                                     12/19/2023 11:49:39 PAGE 7   

0013 FD                MOV     R5,A
0014 74FF              MOV     A,#0FFH
0016 3C                ADDC    A,R4
0017 FC                MOV     R4,A
0018 80EA              SJMP    ?C0016
                                           ; SOURCE LINE # 69
001A         ?C0019:
001A C3                CLR     C
001B ED                MOV     A,R5
001C 940A              SUBB    A,#0AH
001E EC                MOV     A,R4
001F 9400              SUBB    A,#00H
0021 400D              JC      ?C0022
0023 120000      R     LCALL   Delay10us
0026 74F6              MOV     A,#0F6H
0028 2D                ADD     A,R5
0029 FD                MOV     R5,A
002A 74FF              MOV     A,#0FFH
002C 3C                ADDC    A,R4
002D FC                MOV     R4,A
002E 80EA              SJMP    ?C0019
                                           ; SOURCE LINE # 70
0030         ?C0022:
0030 D3                SETB    C
0031 ED                MOV     A,R5
0032 9400              SUBB    A,#00H
0034 EC                MOV     A,R4
0035 9400              SUBB    A,#00H
0037 400A              JC      ?C0025
0039 120000      R     LCALL   Delay1us
003C ED                MOV     A,R5
003D 1D                DEC     R5
003E 70F0              JNZ     ?C0022
0040 1C                DEC     R4
0041         ?C0069:
0041 80ED              SJMP    ?C0022
                                           ; SOURCE LINE # 71
0043         ?C0025:
0043 22                RET     
             ; FUNCTION _DelayUs (END)

             ; FUNCTION _DelayMs (BEGIN)
                                           ; SOURCE LINE # 73
0000 900000      R     MOV     DPTR,#ms
0003 EE                MOV     A,R6
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 76
0008 120000      R     LCALL   time_GetTicks
000B 900000      R     MOV     DPTR,#oldticks
000E 120000      E     LCALL   ?C?LSTXDATA
0011         ?C0028:
                                           ; SOURCE LINE # 77
                                           ; SOURCE LINE # 78
0011 120000      R     LCALL   time_GetTicks
0014 900000      R     MOV     DPTR,#ticks
0017 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 79
001A 900000      R     MOV     DPTR,#oldticks
001D E0                MOVX    A,@DPTR
C51 COMPILER V9.60.7.0   RICHBOT_TIMER                                                     12/19/2023 11:49:39 PAGE 8   

001E F8                MOV     R0,A
001F A3                INC     DPTR
0020 E0                MOVX    A,@DPTR
0021 F9                MOV     R1,A
0022 A3                INC     DPTR
0023 E0                MOVX    A,@DPTR
0024 FA                MOV     R2,A
0025 A3                INC     DPTR
0026 E0                MOVX    A,@DPTR
0027 FB                MOV     R3,A
0028 A3                INC     DPTR
0029 E0                MOVX    A,@DPTR
002A FC                MOV     R4,A
002B A3                INC     DPTR
002C E0                MOVX    A,@DPTR
002D FD                MOV     R5,A
002E A3                INC     DPTR
002F E0                MOVX    A,@DPTR
0030 FE                MOV     R6,A
0031 A3                INC     DPTR
0032 E0                MOVX    A,@DPTR
0033 C3                CLR     C
0034 9B                SUBB    A,R3
0035 FB                MOV     R3,A
0036 EE                MOV     A,R6
0037 9A                SUBB    A,R2
0038 FA                MOV     R2,A
0039 ED                MOV     A,R5
003A 99                SUBB    A,R1
003B F9                MOV     R1,A
003C EC                MOV     A,R4
003D 98                SUBB    A,R0
003E F8                MOV     R0,A
003F 900000      R     MOV     DPTR,#ms
0042 E0                MOVX    A,@DPTR
0043 FE                MOV     R6,A
0044 A3                INC     DPTR
0045 E0                MOVX    A,@DPTR
0046 FF                MOV     R7,A
0047 E4                CLR     A
0048 FC                MOV     R4,A
0049 FD                MOV     R5,A
004A C3                CLR     C
004B 120000      E     LCALL   ?C?ULCMP
004E 40C1              JC      ?C0028
                                           ; SOURCE LINE # 80
0050 22                RET     
             ; FUNCTION _DelayMs (END)

             ; FUNCTION _Timer_Inilize (BEGIN)
                                           ; SOURCE LINE # 227
;---- Variable 'TIMx' assigned to Register 'R1/R2/R3' ----
;---- Variable 'TIM' assigned to Register 'R5' ----
0000 AD07              MOV     R5,AR7
                                           ; SOURCE LINE # 228
                                           ; SOURCE LINE # 229
0002 ED                MOV     A,R5
0003 D3                SETB    C
0004 9402              SUBB    A,#02H
0006 4005              JC      ?C0030
0008 7E00              MOV     R6,#00H
000A 7F01              MOV     R7,#01H
C51 COMPILER V9.60.7.0   RICHBOT_TIMER                                                     12/19/2023 11:49:39 PAGE 9   

000C 22                RET     
000D         ?C0030:
                                           ; SOURCE LINE # 231
000D ED                MOV     A,R5
000E 6003              JZ      $ + 5H
0010 020000      R     LJMP    ?C0032
                                           ; SOURCE LINE # 232
                                           ; SOURCE LINE # 233
0013 C28C              CLR     TR0
                                           ; SOURCE LINE # 234
0015 900002            MOV     DPTR,#02H
0018 120000      E     LCALL   ?C?CLDOPTR
001B B40104            CJNE    A,#01H,?C0033
001E D2A9              SETB    ET0
0020 8002              SJMP    ?C0034
0022         ?C0033:
                                           ; SOURCE LINE # 235
0022 C2A9              CLR     ET0
0024         ?C0034:
                                           ; SOURCE LINE # 236
0024 900001            MOV     DPTR,#01H
0027 120000      E     LCALL   ?C?CLDOPTR
002A B40104            CJNE    A,#01H,?C0035
002D D2B9              SETB    PT0
002F 8002              SJMP    ?C0036
0031         ?C0035:
                                           ; SOURCE LINE # 237
0031 C2B9              CLR     PT0
0033         ?C0036:
                                           ; SOURCE LINE # 238
0033 120000      E     LCALL   ?C?CLDPTR
0036 FC                MOV     R4,A
0037 D3                SETB    C
0038 9403              SUBB    A,#03H
003A 4003              JC      ?C0037
003C 020000      R     LJMP    ?C0074
003F         ?C0037:
                                           ; SOURCE LINE # 239
003F E589              MOV     A,TMOD
0041 54FC              ANL     A,#0FCH
0043 4C                ORL     A,R4
0044 F589              MOV     TMOD,A
                                           ; SOURCE LINE # 240
0046 900003            MOV     DPTR,#03H
0049 120000      E     LCALL   ?C?CLDOPTR
004C FF                MOV     R7,A
004D B40103            CJNE    A,#01H,?C0038
0050 538E7F            ANL     AUXR,#07FH
0053         ?C0038:
                                           ; SOURCE LINE # 241
0053 EF                MOV     A,R7
0054 7003              JNZ     ?C0039
0056 438E80            ORL     AUXR,#080H
0059         ?C0039:
                                           ; SOURCE LINE # 242
0059 EF                MOV     A,R7
005A B40205            CJNE    A,#02H,?C0040
005D 438904            ORL     TMOD,#04H
0060 8003              SJMP    ?C0041
0062         ?C0040:
                                           ; SOURCE LINE # 243
0062 5389FB            ANL     TMOD,#0FBH
C51 COMPILER V9.60.7.0   RICHBOT_TIMER                                                     12/19/2023 11:49:39 PAGE 10  

0065         ?C0041:
                                           ; SOURCE LINE # 244
0065 900004            MOV     DPTR,#04H
0068 120000      E     LCALL   ?C?CLDOPTR
006B B40105            CJNE    A,#01H,?C0042
006E 438F01            ORL     INT_CLKO,#01H
0071 8003              SJMP    ?C0043
0073         ?C0042:
                                           ; SOURCE LINE # 245
0073 538FFE            ANL     INT_CLKO,#0FEH
0076         ?C0043:
                                           ; SOURCE LINE # 247
0076 900005            MOV     DPTR,#05H
0079 120000      E     LCALL   ?C?ILDOPTR
007C E5F0              MOV     A,B
007E F58C              MOV     TH0,A
                                           ; SOURCE LINE # 248
0080 900005            MOV     DPTR,#05H
0083 120000      E     LCALL   ?C?ILDOPTR
0086 F58A              MOV     TL0,A
                                           ; SOURCE LINE # 249
0088 900007            MOV     DPTR,#07H
008B 120000      E     LCALL   ?C?CLDOPTR
008E B40102            CJNE    A,#01H,?C0044
0091 D28C              SETB    TR0
0093         ?C0044:
                                           ; SOURCE LINE # 250
0093 020000      R     LJMP    ?C0073
                                           ; SOURCE LINE # 251
0096         ?C0032:
                                           ; SOURCE LINE # 253
0096 ED                MOV     A,R5
0097 6401              XRL     A,#01H
0099 6003              JZ      $ + 5H
009B 020000      R     LJMP    ?C0045
                                           ; SOURCE LINE # 254
                                           ; SOURCE LINE # 255
009E C28E              CLR     TR1
                                           ; SOURCE LINE # 256
00A0 900002            MOV     DPTR,#02H
00A3 120000      E     LCALL   ?C?CLDOPTR
00A6 B40104            CJNE    A,#01H,?C0046
00A9 D2AB              SETB    ET1
00AB 8002              SJMP    ?C0047
00AD         ?C0046:
                                           ; SOURCE LINE # 257
00AD C2AB              CLR     ET1
00AF         ?C0047:
                                           ; SOURCE LINE # 258
00AF 900001            MOV     DPTR,#01H
00B2 120000      E     LCALL   ?C?CLDOPTR
00B5 B40104            CJNE    A,#01H,?C0048
00B8 D2BB              SETB    PT1
00BA 8002              SJMP    ?C0049
00BC         ?C0048:
                                           ; SOURCE LINE # 259
00BC C2BB              CLR     PT1
00BE         ?C0049:
                                           ; SOURCE LINE # 260
00BE 120000      E     LCALL   ?C?CLDPTR
00C1 FC                MOV     R4,A
00C2 C3                CLR     C
C51 COMPILER V9.60.7.0   RICHBOT_TIMER                                                     12/19/2023 11:49:39 PAGE 11  

00C3 9403              SUBB    A,#03H
00C5 4003              JC      ?C0050
00C7         ?C0070:
00C7 020000      R     LJMP    ?C0074
00CA         ?C0050:
                                           ; SOURCE LINE # 261
00CA EC                MOV     A,R4
00CB C4                SWAP    A
00CC 54F0              ANL     A,#0F0H
00CE FF                MOV     R7,A
00CF E589              MOV     A,TMOD
00D1 54CF              ANL     A,#0CFH
00D3 4F                ORL     A,R7
00D4 F589              MOV     TMOD,A
                                           ; SOURCE LINE # 262
00D6 900003            MOV     DPTR,#03H
00D9 120000      E     LCALL   ?C?CLDOPTR
00DC FF                MOV     R7,A
00DD B40103            CJNE    A,#01H,?C0051
00E0 538EBF            ANL     AUXR,#0BFH
00E3         ?C0051:
                                           ; SOURCE LINE # 263
00E3 EF                MOV     A,R7
00E4 7003              JNZ     ?C0052
00E6 438E40            ORL     AUXR,#040H
00E9         ?C0052:
                                           ; SOURCE LINE # 264
00E9 EF                MOV     A,R7
00EA B40205            CJNE    A,#02H,?C0053
00ED 438940            ORL     TMOD,#040H
00F0 8003              SJMP    ?C0054
00F2         ?C0053:
                                           ; SOURCE LINE # 265
00F2 5389BF            ANL     TMOD,#0BFH
00F5         ?C0054:
                                           ; SOURCE LINE # 266
00F5 900004            MOV     DPTR,#04H
00F8 120000      E     LCALL   ?C?CLDOPTR
00FB B40105            CJNE    A,#01H,?C0055
00FE 438F02            ORL     INT_CLKO,#02H
0101 8003              SJMP    ?C0056
0103         ?C0055:
                                           ; SOURCE LINE # 267
0103 538FFD            ANL     INT_CLKO,#0FDH
0106         ?C0056:
                                           ; SOURCE LINE # 269
0106 900005            MOV     DPTR,#05H
0109 120000      E     LCALL   ?C?ILDOPTR
010C E5F0              MOV     A,B
010E F58D              MOV     TH1,A
                                           ; SOURCE LINE # 270
0110 900005            MOV     DPTR,#05H
0113 120000      E     LCALL   ?C?ILDOPTR
0116 F58B              MOV     TL1,A
                                           ; SOURCE LINE # 271
0118 900007            MOV     DPTR,#07H
011B 120000      E     LCALL   ?C?CLDOPTR
011E B40102            CJNE    A,#01H,?C0057
0121 D28E              SETB    TR1
0123         ?C0057:
                                           ; SOURCE LINE # 272
0123         ?C0071:
C51 COMPILER V9.60.7.0   RICHBOT_TIMER                                                     12/19/2023 11:49:39 PAGE 12  

0123 8075              SJMP    ?C0073
                                           ; SOURCE LINE # 273
0125         ?C0045:
                                           ; SOURCE LINE # 275
0125 ED                MOV     A,R5
0126 6402              XRL     A,#02H
0128 7074              JNZ     ?C0058
                                           ; SOURCE LINE # 276
                                           ; SOURCE LINE # 277
012A 538EEF            ANL     AUXR,#0EFH
                                           ; SOURCE LINE # 278
012D 900002            MOV     DPTR,#02H
0130 120000      E     LCALL   ?C?CLDOPTR
0133 B40105            CJNE    A,#01H,?C0059
0136 43AF04            ORL     IE2,#04H
0139 8003              SJMP    ?C0060
013B         ?C0059:
                                           ; SOURCE LINE # 279
013B 53AFFB            ANL     IE2,#0FBH
013E         ?C0060:
                                           ; SOURCE LINE # 280
013E 900003            MOV     DPTR,#03H
0141 120000      E     LCALL   ?C?CLDOPTR
0144 FD                MOV     R5,A
0145 D3                SETB    C
0146 9402              SUBB    A,#02H
0148 4002              JC      ?C0061
014A         ?C0072:
014A 8052              SJMP    ?C0074
014C         ?C0061:
                                           ; SOURCE LINE # 281
014C ED                MOV     A,R5
014D B40103            CJNE    A,#01H,?C0062
0150 538EFB            ANL     AUXR,#0FBH
0153         ?C0062:
                                           ; SOURCE LINE # 282
0153 900003            MOV     DPTR,#03H
0156 120000      E     LCALL   ?C?CLDOPTR
0159 7003              JNZ     ?C0063
015B 438E04            ORL     AUXR,#04H
015E         ?C0063:
                                           ; SOURCE LINE # 283
015E 900003            MOV     DPTR,#03H
0161 120000      E     LCALL   ?C?CLDOPTR
0164 B40205            CJNE    A,#02H,?C0064
0167 438E08            ORL     AUXR,#08H
016A 8003              SJMP    ?C0065
016C         ?C0064:
                                           ; SOURCE LINE # 284
016C 538EF7            ANL     AUXR,#0F7H
016F         ?C0065:
                                           ; SOURCE LINE # 285
016F 900004            MOV     DPTR,#04H
0172 120000      E     LCALL   ?C?CLDOPTR
0175 B40105            CJNE    A,#01H,?C0066
0178 438F04            ORL     INT_CLKO,#04H
017B 8003              SJMP    ?C0067
017D         ?C0066:
                                           ; SOURCE LINE # 286
017D 538FFB            ANL     INT_CLKO,#0FBH
0180         ?C0067:
                                           ; SOURCE LINE # 288
C51 COMPILER V9.60.7.0   RICHBOT_TIMER                                                     12/19/2023 11:49:39 PAGE 13  

0180 900005            MOV     DPTR,#05H
0183 120000      E     LCALL   ?C?ILDOPTR
0186 FD                MOV     R5,A
0187 ACF0              MOV     R4,B
0189 EC                MOV     A,R4
018A F5D6              MOV     T2H,A
                                           ; SOURCE LINE # 289
018C 8DD7              MOV     T2L,R5
                                           ; SOURCE LINE # 290
018E 900007            MOV     DPTR,#07H
0191 120000      E     LCALL   ?C?CLDOPTR
0194 B40103            CJNE    A,#01H,?C0068
0197 438E10            ORL     AUXR,#010H
019A         ?C0068:
                                           ; SOURCE LINE # 291
019A         ?C0073:
019A E4                CLR     A
019B FE                MOV     R6,A
019C FF                MOV     R7,A
019D 22                RET     
                                           ; SOURCE LINE # 292
019E         ?C0058:
                                           ; SOURCE LINE # 293
019E         ?C0074:
019E 7E00              MOV     R6,#00H
01A0 7F02              MOV     R7,#02H
                                           ; SOURCE LINE # 294
01A2         ?C0031:
01A2 22                RET     
             ; FUNCTION _Timer_Inilize (END)

C51 COMPILER V9.60.7.0   RICHBOT_TIMER                                                     12/19/2023 11:49:39 PAGE 14  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


uint16_t . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
CCF2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00DAH  1
P1M0 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0092H  1
P0M1 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0093H  1
P2M0 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0096H  1
P1M1 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0091H  1
P0 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0080H  1
P3M0 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B2H  1
P2M1 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0095H  1
P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
PCA_InitTypeDef. . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  8
  PCA_IoUse. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  PCA_Clock. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  PCA_Mode . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  PCA_PWM_Wide . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  PCA_Interrupt_Mode . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  PCA_Polity . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  PCA_Value. . . . . . . . . . . . . .  MEMBER   -----  U_INT    0006H  2
P4M0 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B4H  1
P3M1 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B1H  1
P2 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
WKTCH. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00ABH  1
P5M0 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CAH  1
P4M1 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B3H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
P6M0 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CCH  1
P5M1 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C9H  1
P4 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C0H  1
AC . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D6H  1
PWMIF. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F6H  1
P7M0 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E2H  1
P6M1 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CBH  1
P5 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
P7M1 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E1H  1
P6 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E8H  1
WKTCL. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00AAH  1
P7 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F8H  1
SPINTURNRIGHT. . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
SPCTL. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CEH  1
CF . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00DFH  1
PWMCR. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F5H  1
CH . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F9H  1
P_SW1. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A2H  1
Delay1us . . . . . . . . . . . . . . .  STATIC   CODE   PROC     0000H  -----
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
P_SW2. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00BAH  1
EADC . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ADH  1
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
CL . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E9H  1
IAP_CMD. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C5H  1
CCAP0H . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00FAH  1
size_t . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
CCAP1H . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00FBH  1
CCAP2H . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00FCH  1
ADC_RES. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00BDH  1
CCAP0L . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00EAH  1
C51 COMPILER V9.60.7.0   RICHBOT_TIMER                                                     12/19/2023 11:49:39 PAGE 15  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


CR . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00DEH  1
BACKWARDS. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
PWMFDCR. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F7H  1
CCAP1L . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00EBH  1
CCAPM0 . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00DAH  1
CCAP2L . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00ECH  1
CCAPM1 . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00DBH  1
TIM_InitTypeDef. . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  8
  TIM_Mode . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  TIM_Polity . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  TIM_Interrupt. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  TIM_ClkSource. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  TIM_ClkOut . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  TIM_Value. . . . . . . . . . . . . .  MEMBER   -----  U_INT    0005H  2
  TIM_Run. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
FORWARD. . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CCAPM2 . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00DCH  1
ES . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ACH  1
PADC . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BDH  1
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
RI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0098H  1
_motor_direction_. . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
CY . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D7H  1
TI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
COMx_InitDefine. . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  13
  UART_Mode. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  UART_BRT_Use . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  UART_BaudRate. . . . . . . . . . . .  MEMBER   -----  U_LONG   0002H  4
  Morecommunicate. . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  UART_RxEnable. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  BaudRateDouble . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  UART_Interrupt . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  UART_Polity. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  UART_P_SW. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  UART_RXD_TXD_Short . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
CLK_DIV. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0097H  1
IAP_ADDRH. . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C3H  1
PS . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BCH  1
SP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0081H  1
timer0_ISR . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
CMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D9H  1
CCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D8H  1
IAP_ADDRL. . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C4H  1
PPCA . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BFH  1
OV . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D2H  1
CMPCR1 . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E6H  1
CMPCR2 . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E7H  1
g_sys_ticks. . . . . . . . . . . . . .  STATIC   IDATA  U_LONG   0000H  4
ELVD . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AEH  1
P00. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0080H  1
ADC_CONTR. . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00BCH  1
SBUF . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0099H  1
PCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0087H  1
P10. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0090H  1
P01. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0081H  1
P20. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A0H  1
P11. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0091H  1
C51 COMPILER V9.60.7.0   RICHBOT_TIMER                                                     12/19/2023 11:49:39 PAGE 16  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


P02. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0082H  1
_DelayMs . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  ms . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_INT    0000H  2
  oldticks . . . . . . . . . . . . . .  AUTO     XDATA  U_LONG   0002H  4
  ticks. . . . . . . . . . . . . . . .  AUTO     XDATA  U_LONG   0006H  4
P30. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B0H  1
P21. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A1H  1
P12. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0092H  1
P03. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0083H  1
SPINTURNLEFT . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
P40. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C0H  1
P31. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B1H  1
P22. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A2H  1
P13. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0093H  1
P04. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0084H  1
time_GetTicks. . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  ticks. . . . . . . . . . . . . . . .  * REG *  DATA   U_LONG   0004H  4
TMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0089H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
P50. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C8H  1
P41. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C1H  1
P32. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
P23. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A3H  1
P14. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0094H  1
P05. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0085H  1
P60. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00E8H  1
P51. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C9H  1
P42. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C2H  1
P33. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
P24. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A4H  1
P15. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0095H  1
P06. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0086H  1
PLVD . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BEH  1
P70. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00F8H  1
P61. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00E9H  1
P52. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CAH  1
P43. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C3H  1
P34. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
P25. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A5H  1
P16. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0096H  1
P07. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0087H  1
P71. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00F9H  1
P62. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EAH  1
P53. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CBH  1
P44. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C4H  1
P35. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
P26. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A6H  1
P17. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0097H  1
P72. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00FAH  1
P63. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EBH  1
P54. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CCH  1
P45. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C5H  1
P36. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B6H  1
P27. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A7H  1
P73. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00FBH  1
P64. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ECH  1
C51 COMPILER V9.60.7.0   RICHBOT_TIMER                                                     12/19/2023 11:49:39 PAGE 17  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


P55. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CDH  1
P46. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C6H  1
P37. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B7H  1
_DelayUs . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  us . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0004H  2
P74. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00FCH  1
P65. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EDH  1
P56. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CEH  1
P47. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C7H  1
P75. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00FDH  1
P66. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EEH  1
P57. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CFH  1
Delay10us. . . . . . . . . . . . . . .  STATIC   CODE   PROC     0000H  -----
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
_Timer_Inilize . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  TIM. . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0005H  1
  TIMx . . . . . . . . . . . . . . . .  * REG *  DATA   PTR      0001H  3
P76. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00FEH  1
P67. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EFH  1
IE0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0089H  1
BUS_SPEED. . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A1H  1
P77. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00FFH  1
IE1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008BH  1
IE2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00AFH  1
AUXR . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008EH  1
B. . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F0H  1
IAP_CONTR. . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C7H  1
SysTick_Init . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  TIM_InitStructure. . . . . . . . . .  AUTO     XDATA  STRUCT   0000H  8
PWMCFG . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F1H  1
STOP . . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
ACC. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E0H  1
ET0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A9H  1
TF0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008DH  1
ET1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ABH  1
TURNRIGHT. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
TF1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008FH  1
IP2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B5H  1
RB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009AH  1
TH0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008CH  1
TH1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008DH  1
IT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0088H  1
EX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A8H  1
TB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009BH  1
T2H. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D6H  1
IT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008AH  1
EX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AAH  1
uint8_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
T3H. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D4H  1
P. . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D0H  1
SM0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009FH  1
T4H. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D2H  1
TL0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008AH  1
SM1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009EH  1
TL1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008BH  1
SM2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009DH  1
T2L. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D7H  1
C51 COMPILER V9.60.7.0   RICHBOT_TIMER                                                     12/19/2023 11:49:39 PAGE 18  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


T3L. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D5H  1
T4L. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D3H  1
PT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B9H  1
PT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BBH  1
RS0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D3H  1
IAP_DATA . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C2H  1
TR0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008CH  1
RS1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D4H  1
TR1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008EH  1
g_timer0_init_val. . . . . . . . . . .  STATIC   CODE   U_INT    0000H  2
WDT_CONTR. . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C1H  1
PX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B8H  1
PX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BAH  1
PCA_PWM0 . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F2H  1
PCA_PWM1 . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F3H  1
PCA_PWM2 . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F4H  1
P1ASF. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   009DH  1
DPH. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0083H  1
GPIO_InitTypeDef . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  GPIO_Mode. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  GPIO_Pin . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
T3T4M. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D1H  1
T4T3M. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D1H  1
ADC_RESL . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00BEH  1
DPL. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0082H  1
SPSTAT . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CDH  1
S2BUF. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   009BH  1
S3BUF. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00ADH  1
S4BUF. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0085H  1
REN. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009CH  1
S2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   009AH  1
S3CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00ACH  1
S4CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0084H  1
SADEN. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B9H  1
Delay100us . . . . . . . . . . . . . .  STATIC   CODE   PROC     0000H  -----
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
  j. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0006H  1
SADDR. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A9H  1
IAP_TRIG . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C6H  1
AUXR1. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A2H  1
F0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D5H  1
INT_CLKO . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008FH  1
F1 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D1H  1
TURNLEFT . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1
uint32_t . . . . . . . . . . . . . . .  TYPEDEF  -----  U_LONG   -----  4
CCF0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D8H  1
CCF1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D9H  1
SPDAT. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CFH  1
P0M0 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0094H  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    729    ----
   CONSTANT SIZE    =      2    ----
   XDATA SIZE       =   ----      18
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
C51 COMPILER V9.60.7.0   RICHBOT_TIMER                                                     12/19/2023 11:49:39 PAGE 19  

   IDATA SIZE       =      4    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
